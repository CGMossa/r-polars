# Generated by roxygen2: do not edit by hand

S3method("!",Expr)
S3method("!=",DataType)
S3method("!=",Expr)
S3method("$",DataFrame)
S3method("$",DataType)
S3method("$",DataTypeVector)
S3method("$",Expr)
S3method("$",LazyFrame)
S3method("$",LazyGroupBy)
S3method("$",ProtoExprArray)
S3method("$",RNullValues)
S3method("$",RexprArray)
S3method("$",Series)
S3method("*",Expr)
S3method("+",Expr)
S3method("-",Expr)
S3method("/",Expr)
S3method("<",Expr)
S3method("<=",Expr)
S3method("==",DataType)
S3method("==",Expr)
S3method(">",Expr)
S3method(">=",Expr)
S3method("[[",DataFrame)
S3method("[[",DataType)
S3method("[[",DataTypeVector)
S3method("[[",Expr)
S3method("[[",LazyFrame)
S3method("[[",LazyGroupBy)
S3method("[[",ProtoExprArray)
S3method("[[",RNullValues)
S3method("[[",RexprArray)
S3method("[[",Series)
S3method(.DollarNames,DataFrame)
S3method(.DollarNames,Expr)
S3method(.DollarNames,Series)
S3method(c,Series)
S3method(print,DataFrame)
S3method(print,DataType)
S3method(print,Expr)
S3method(print,LazyFrame)
S3method(print,LazyGroupBy)
S3method(print,Series)
export(.pr)
export(Series)
export(Series_constructor)
export(csv_reader)
export(import_polars_as_)
export(inherits2)
export(pl)
export(read_csv_)
importFrom(namespace,makeNamespace)
importFrom(rlang,abort)
importFrom(rlang,is_integerish)
importFrom(rlang,is_string)
importFrom(xptr,xptr_address)
useDynLib(minipolars, .registration = TRUE)
